library(BETS)
library(plotly)
BETSsearch('RORAIMA', view=TRUE)
BETSsearch('RORAIMA')
df_results <- BETSsearch('RORAIMA')
df_results
select(df_results, 'code')
code <- select(df_results, 'code')
for (c in code){}
for (c in code){
print(c)
}
select(code,1)
select(code,1,2)
select(code,12)
path <- '/home/proj/BETS'
BETS
BETSget(12528)
df <- BETSget(12528)
df <- BETSget(12528,data.frame = TRUE)
write.csv(df, file=path)
write.csv(df, file=path)
code
code[1]
code[1,]
1:100
len(code)
lenght(code)
length(code)
code
nrow(code)
1:nrow(code)
paste('a','b')
paste('a','b', sep = '')
c
code[1,]
paste('teste',code[1,])
write.csv(df, file='/home/proj/BETS/teste.csv')
write.csv(df, file='teste.csv')
ls
write.csv(df, file='/proj/BETS/teste.csv')
write.csv(df, file='\proj\BETS\teste.csv')
print('teste')
print('a',123)
print(paste('a',123))
print('BETSsearch')
df_roraima <- BETSsearch('RORAIMA')
code <- select(df,code)
write.csv(df_roraima, file='df_roraima.csv')
print('Starting loop')
for (i in 1:nrow(code)){
print(paste('Saving ',code[i,],'...',sep=''))
df <- BETSget(code[i,], data.frame=TRUE)
path <- paste(code[i,],'.csv',sep='')
write.csv(df, file=path)
}
BETSget(12528)
BETSget(12528,data.frame = TRUE)
a <- BETSget(12528,data.frame = TRUE)
write.csv(a, file='12528.csv')
library(plotly)
library(BETS)
BETSsearch('RORAIMA')
BETSsearch('RORAIMA', view = T)
flow <- BETSget(4358)
plot(flow)
flow <- BETSget(12528)
plot(flow)
flow
seq(1985,2011)
x <- seq(1985,2011)
plot_ly(x = x, y = flow)
plot_ly(x = x, y = flow, mode='l')
help(plot_ly)
plot_ly(x = x, y = flow, mode='l')
layout(title(main = 'GDP - Roraima'))
layout(title(main = 'GDP - Roraima', xlab = 'Anos', ylab = 'PIB em USD'))
plot.new()
layout(title(main = 'GDP - Roraima', xlab = 'Anos', ylab = 'PIB em USD'))
plot_ly(x = x, y = flow, mode='l')
plot.new(x = x, y = flow, mode='l')
plot.new(plot_ly(x = x, y = flow, mode='l'))
help(plot.new)
plot_ly(x = x, y = flow, mode='l', layout(title('Teste')))
plot.new
plot.new()
plot_ly(x = x, y = flow, mode='l', layout(title('Teste')))
plot(x = x, y=y)
plot(x = x, y=flow)
plot(x = x, y=flow, 'l')
plot(flow, 'l')
plot(flow)
plot(decompose(flow))
flow
plot(acf(flow))
plot_ly(x = x, y = flow, mode='l') %>% layout(title(main = 'Teste'))
plot.new() %>% plot_ly(x = x, y = flow, mode='l') %>% layout(title(main = 'Teste'))
data.frame(x,flow)
flow.data <- data.frame(x,flow)
plot.new() %>% plot_ly(flow.data, x = x, y = flow, mode='l') %>% layout(title(main = 'Teste'))
p <- plot_ly()
p <- add_lines(p, x = x, y = flow)
layout(p, xaxis = list(title='Teste'))
layout(p, xaxis = list(title='Testea'))
layout(p, xaxis = list(title='Years'), yaxis = list(title=('GDP in USD')), main = 'GDP per year in Roraima')
layout(p, xaxis = list(title='Years'), yaxis = list(title=('GDP in USD')), title(main = 'GDP per year in Roraima'))
rm(p)
p <- plot_ly()
p <- add_lines(p, x = x, y = flow)
layout(p, xaxis = list(title = 'Anos'), yaxis = list(title='PIB em UDS'))
libray(ggplot2)
library(ggplot2)
library(plotly)
library(BETS)
BETSsearch('ES')
BETSsearch('ES', view = T)
BETSsearch('BH', view = T)
but <- BETSget(3112)
plot(but)
BETSsearch('BH')[1]
BETSsearch('BH')
c(2013,1,12)
ts(c(1989,1))
ts(c(1989,1), 2020)
ts(c(1989,1))
acf(but)
plot(decompose(but))
rm(but)
quit()
ls
ls()
dir()
data = read.csv('temp/vazoes/ribeiroGon.csv', header = TRUE)
names(data)
data = read.csv('temp/vazoes/ribeiroGon.csv', header = TRUE)
names(data)
data$month
vazoes = ts(data$vazao, start = 1966, frequency = 12)
ts.plot(vazoes, ylab='Vazões')
## Create equally spaced time points for fitting trends
time.pts = c(1:lenght(vazoes))
## Create equally spaced time points for fitting trends
time.pts = c(1:length(vazoes))
time.pts = c(time.pts - min(time.pts)/max(time.pts))
## Fit a moving average
mav.fit = ksmooth(time.pts, vazoes, kernel = 'box')
1902-1879
1966+23
## Is there a trend?
ts.plot(vazoes, ylab = 'Vazões')
temp.fit.mav = ts(mav.fit$y, start = 1989, frequency = 12)
lines(temp.fit.mav, lwd = 2, col = 'purple')
abline(temp.fit.mav[1],0,lwd=2, col='blue')
time.pts = c(time.pts - min(time.pts))/max(time.pts)
time.pts = c(time.pts - min(time.pts))/max(time.pts)
## Fit a moving average
mav.fit = ksmooth(time.pts, vazoes, kernel = 'box')
temp.fit.mav = ts(mav.fit$y, start = 1989, frequency = 12)
## Is there a trend?
ts.plot(vazoes, ylab = 'Vazões')
lines(temp.fit.mav, lwd = 2, col = 'purple')
abline(temp.fit.mav[1],0,lwd=2, col='blue')
plot(cars)
plot(cars)
data = read.csv('temp/vazoes/ribeiroGon.csv', header = TRUE)
vazoes = ts(data$vazao, start = 1966, frequency = 12)
ts.plot(vazoes, ylab='Vazões')
time.pts = c(time.pts - min(time.pts))/max(time.pts)
temp.fit.mav = ts(mav.fit$y, start = 1989, frequency = 12)
abline(temp.fit.mav[1],0,lwd=2, col='blue')
lines(temp.fit.mav, lwd = 2, col = 'purple')
plot.new()
)
plot.new(
ts.plot(vazoes, ylab = 'Vazões')
lines(temp.fit.mav, lwd = 2, col = 'purple')
ts.plot(vazoes, ylab = 'Vazões')
lines(temp.fit.mav, lwd = 2, col = 'purple')
abline(temp.fit.mav[1],0,lwd=2, col='blue'))
ts.plot(vazoes, ylab = 'Vazões')
lines(temp.fit.mav, lwd = 2, col = 'purple'))
ts.plot(vazoes, ylab = 'Vazões'))
ts.plot(vazoes, ylab = 'Vazões')
lines(temp.fit.mav, lwd = 2, col = 'purple')
abline(tem
abline(temp.fit.mav[1],0,lwd=2, col='blue')
roGon.csv', header = TRUE)
vazoes = ts(data$vazao, start = 1966, frequency = 12)
#ts.plot(vazoes, ylab='Vazões')
## Create equally spaced time points for fitting trends
time.pts = c(1:length(vazoes))
time.pts = c(time.pts - min(time.pts))/max(time.pts)
## Fit a moving average
mav.fit = ksmooth(time.pts, vazoes, kernel = 'box')
temp.fit.mav = ts(mav.fit$y, start = 1989, frequency = 12)
## Is there a trend?
ts.plot(vazoes, ylab = 'Vazões')
lines(temp.fit.mav, lwd = 2, col = 'purple')
abline(temp.fit.mav[1],0,lwd=2, col='blue')
x2 = time.pts^2
lm.fit = lm(vazoes~x1+x2)
summary(lim.fit)
summary(lm.fit)
s
x2 = time.pts^2
lm.fit = lm(vazoes~x1+x2)
summary(lm.fit)
####################################
# Parametric regression
x1 = time.pts
x2 = time.pts^2
lm.fit = lm(vazoes~x1+x2)
summary(lm.fit)
## Is there a trend?
vazoes.fit.lm = ts(fitted(lm.fit), start = 1975, frequency = 12)
frequency = 12)
ts.plot(vazoes, ylab = 'Vazões')
lines(vazoes.fit.lm, lwd=2, col = 'green')
abline(vazoes.fit.lm[1], 0, lwd=2, col = 'blue')
rt = 1966, frequency = 12)
ts.plot(vazoes, ylab = 'Vazões')
lines(vazoes.fit.lm, lwd=2, col = 'green')
abline(vazoes.fit.lm[1], 0, lwd=2, col = 'blue')
library(mgcv)
ts.plot(vazoes, ylab='Vazões')
ts.plot(vazoes, ylab='Vazões')
ts.plot(vazoes, ylab='Vazões', title('Teste'))
loc.fit = loess(vazoes~time.pts)
vazoes.fit.loc = ts(fitted(loc.fit), start = 1980, frequency = 12)
## Splines trend estimation
library(mgcv)
gam.fit = gam(vazoes~s(time.pts))
vazoes.fit.gam = ts(fitted(gam.fit), start = 1980, frequency = 12)
## Is there a trend?
ts.plot(vazoes, ylab = 'Vazoes', title('Non-Parametric Regression'))
lines(vazoes.fit.loc, lwd = 2, col = 'brown')
lines(vazoes.fit.gam, lwd = 2, col = 'red')
abline(vazoes.fit.loc[1], 0 , lwd = 2, col = 'blue')
####################################
## Non-parametric
## Local Polynomial Trend Estimation
loc.fit = loess(vazoes~time.pts)
## Splines trend estimation
library(mgcv)
####################################
## Non-parametric
## Local Polynomial Trend Estimation
loc.fit = loess(vazoes~time.pts)
vazoes.fit.loc = ts(fitted(loc.fit), start = 1980, frequency = 12)
## Splines trend estimation
library(mgcv)
gam.fit = gam(vazoes~s(time.pts))
vazoes.fit.gam = ts(fitted(gam.fit), start = 1980, frequency = 12)
## Is there a trend?
ts.plot(vazoes, ylab = 'Vazoes', title('Non-Parametric Regression'))
plt.new()
plot.new()
## Is there a trend?
ts.plot(vazoes, ylab = 'Vazoes', title('Non-Parametric Regression'))
lines(vazoes.fit.loc, lwd = 2, col = 'brown')
lines(vazoes.fit.gam, lwd = 2, col = 'red')
abline(vazoes.fit.loc[1], 0 , lwd = 2, col = 'blue')
vazoes.fit.loc = ts(fitted(loc.fit), start = 1966, frequency = 12)
## Splines trend estimation
library(mgcv)
gam.fit = gam(vazoes~s(time.pts))
vazoes.fit.gam = ts(fitted(gam.fit), start = 1966, frequency = 12)
## Is there a trend?
ts.plot(vazoes, ylab = 'Vazoes', title('Non-Parametric Regression'))
lines(vazoes.fit.loc, lwd = 2, col = 'brown')
plot.new()
## Is there a trend?
ts.plot(vazoes, ylab = 'Vazoes', title('Non-Parametric Regression'))
lines(vazoes.fit.loc, lwd = 2, col = 'brown')
lines(vazoes.fit.gam, lwd = 2, col = 'red')
abline(vazoes.fit.loc[1], 0 , lwd = 2, col = 'blue')
oes.fit.loc)
ylim = c(min(all.val), max(all.val))
ts.plot(vazoes.fit.lm, lwd = 2, col = 'green', ylim = ylim, ylab = 'Vazões')
lines(vazoes.fit.mav, lwd = 2, col = 'purple')
lines(vazoes.fit.gam, lwd = 2, col = 'red')
lines(vazoes.fit.loc, lwd = 2, col = 'brown')
legend(x = 1900, y = 64, legend = c('MAV', 'LM', 'GAM', 'LOESS'),lty = 1,
col = c('purple','green','red','brown'))
vazoes.fit.mav = ts(mav.fit$y, start = 1989, frequency = 12)
###################################
# COMPARISON - compare all estimated trends
all.val = c(vazoes.fit.mav, vazoes.fit.lm, vazoes.fit.gam, vazoes.fit.loc)
ylim = c(min(all.val), max(all.val))
ts.plot(vazoes.fit.lm, lwd = 2, col = 'green', ylim = ylim, ylab = 'Vazões')
lines(vazoes.fit.mav, lwd = 2, col = 'purple')
lines(vazoes.fit.gam, lwd = 2, col = 'red')
lines(vazoes.fit.loc, lwd = 2, col = 'brown')
legend(x = 1900, y = 64, legend = c('MAV', 'LM', 'GAM', 'LOESS'),lty = 1,
col = c('purple','green','red','brown'))
legend(x = 1980, y = 160, legend = c('MAV', 'LM', 'GAM', 'LOESS'),lty = 1,
col = c('purple','green','red','brown'))
vazoes.fit.mav = ts(mav.fit$y, start = 1970, frequency = 12)
## Is there a trend?
vazoes.fit.lm = ts(fitted(lm.fit), start = 1970, frequency = 12)
vazoes.fit.loc = ts(fitted(loc.fit), start = 1970, frequency = 12)
vazoes.fit.gam = ts(fitted(gam.fit), start = 1970, frequency = 12)
###################################
# COMPARISON - compare all estimated trends
all.val = c(vazoes.fit.mav, vazoes.fit.lm, vazoes.fit.gam, vazoes.fit.loc)
ylim = c(min(all.val), max(all.val))
ts.plot(vazoes.fit.lm, lwd = 2, col = 'green', ylim = ylim, ylab = 'Vazões')
lines(vazoes.fit.mav, lwd = 2, col = 'purple')
lines(vazoes.fit.gam, lwd = 2, col = 'red')
lines(vazoes.fit.loc, lwd = 2, col = 'brown')
legend(x = 1980, y = 160, legend = c('MAV', 'LM', 'GAM', 'LOESS'),lty = 1,
col = c('purple','green','red','brown'))
legend(x = 1980, y = 200, legend = c('MAV', 'LM', 'GAM', 'LOESS'),lty = 1,
col = c('purple','green','red','brown'))
legend(x = 1980, y = 250, legend = c('MAV', 'LM', 'GAM', 'LOESS'),lty = 1,
col = c('purple','green','red','brown'))
legend(x = 1980, y = 210, legend = c('MAV', 'LM', 'GAM', 'LOESS'),lty = 1,
col = c('purple','green','red','brown'))
###################################
# COMPARISON - compare all estimated trends
all.val = c(vazoes.fit.mav, vazoes.fit.lm, vazoes.fit.gam, vazoes.fit.loc)
ylim = c(min(all.val), max(all.val))
ts.plot(vazoes.fit.lm, lwd = 2, col = 'green', ylim = ylim, ylab = 'Vazões')
lines(vazoes.fit.mav, lwd = 2, col = 'purple')
lines(vazoes.fit.gam, lwd = 2, col = 'red')
lines(vazoes.fit.loc, lwd = 2, col = 'brown')
legend(x = 1980, y = 210, legend = c('MAV', 'LM', 'GAM', 'LOESS'),lty = 1,
col = c('purple','green','red','brown'))
ts.plot(vazoes, ylab='Vazões', title('Dados'))
clear
library(BETS)
BETSsearch('NORTE')
BETSsearch('NORTE', view = T)
ts = BETSget(4367)
ts
ts.plot()
ts(ts)
a = ts(ts)
a.plot()
plot(a)
clc
clear apply(array, margin, ...)
clear a
clr
rm(a)
rm(ts)
lenght(BETSsearch('NORTE',view = T))
lenght(BETSsearch('NORTE'))
len(BETSsearch('NORTE'))
length(BETSsearch('NORTE'))
length(BETSsearch('NORTH'))
length(BETSsearch('NORTE'))
library(BETS)
library(dplyr)
print('BETSsearch')
df_roraima <- BETSsearch('NORTE')
code <- select(df,code)
print('BETSsearch')
df_roraima = BETSsearch('NORTE')
code = select(df,code)
df_roraima
write.csv(df_roraima, file = 'NORTE.csv')
print('BETSsearch')
df_roraima = BETSsearch('NORTH')
write.csv(df_roraima, file = 'NORTH.csv')
ls()
pwd()
pwd
read.csv('./NORTH.csv')
cd 'proj/'
getwd()
setwd(dir = 'proj/BETS/NORTE/')
getwd()
ls()
code = read.csv('NORTH.csv')
rm(df_roraima)
cod
code
codeAll = code
rm(code)
codeAll
code = codeAll$code
code
for (i in 1:nrow(code)){
print(paste('Saving ',code[i,],'...',sep=''))
df <- BETSget(code[i,], data.frame=TRUE)
path <- paste(code[i,],'.csv',sep='')
write.csv(df, file=path)
}
nrow(code)
length(code)
for (i in 1:length(code)){
print(paste('Saving ',code[i,],'...',sep=''))
df <- BETSget(code[i,], data.frame=TRUE)
path <- paste(code[i,],'.csv',sep='')
write.csv(df, file=path)
}
code[1]
print('Starting loop')
for (i in 1:length(code)){
print(paste('Saving ',code[i],'...',sep=''))
df <- BETSget(code[i], data.frame=TRUE)
path <- paste(code[i],'.csv',sep='')
write.csv(df, file=path)
}
code
BETSget(1407)
df <- BETSget(1407, data.frame = T)
path <- "1407.csv"
write.csv(df, file = path)
